---
import { marked } from 'marked'
import { format, parseISO } from 'date-fns'
import EditorLayout from '@layouts/EditorLayout.astro'
import { getLinks, getPost, getPosts } from '@api/index'
import { Link } from '@utils/types'

const links = await getLinks()

const { slug } = Astro.params
const post = await getPost(slug as string)

if (!post) {
  return Astro.redirect('/404')
}

const current_tab = {
  name: post.title,
  icon: 'ooui:article-ltr',
  extension: 'post'
}

const posts = await getPosts()

const tabs = [
  {
    ...(links.find((link) => link.name === 'Blog') as Link),
    extension: 'index'
  },
  ...posts.map((post) => ({
    name: post.title,
    icon: 'ooui:article-ltr',
    url: `/blog/${post.slug}`,
    extension: 'post'
  }))
]
---

<EditorLayout current_tab={current_tab} links={links} tabs={tabs} print>
  <div class="relative">
    <div class="absolute bottom-0 left-0 w-full">
      <div class="flex">
        <div
          class="hidden w-full h-full overflow-hidden sm:block shrink-0 max-w-16 max-h-16 aspect-square"
        >
          <img
            src={post.created_by.avatar}
            alt={`${post.created_by.first_name} ${post.created_by.first_name} Avatar`}
            class="object-cover aspect-square"
          />
        </div>
        <div
          class="flex flex-col justify-center w-full px-4 py-2 bg-brand-background/90 backdrop-blur-md"
        >
          <h3 class="my-0 drop-shadow-sm">{post.title}</h3>
          <div class="mt-1 text-xs drop-shadow-sm text-brand-secondary">
            <span class="text-brand-primary"
              >{format(post.created_at, 'dd MMM yyyy')}
            </span> by
            <span class="text-brand-primary"
              >{post.created_by.first_name} {post.created_by.last_name}
            </span>
          </div>
        </div>
      </div>
    </div>
    <img
      src={post.cover_image}
      alt="Cover Image"
      class="object-cover w-full aspect-video max-h-72"
    />
  </div>
  {post.summary && <div class="m-4 text-brand-secondary">{post.summary}</div>}
  <div class="m-4" set:html={marked.parse(post.content)}></div>
  <div class="m-4">
    {
      post.tags && (
        <div class="flex flex-wrap gap-2 mt-2 sm:mt-0">
          {post.tags.map((tag) => (
            <span class="pill">{tag.name}</span>
          ))}
        </div>
      )
    }
  </div>
</EditorLayout>
